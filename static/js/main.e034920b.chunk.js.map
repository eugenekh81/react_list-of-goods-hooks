{"version":3,"sources":["components/GoodsList.tsx","components/SelectOptions.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","className","map","good","SelectOptions","selectOption","value","goodsFromServer","App","useState","startPressed","setStartPressed","isReversed","setIsReversed","sortBy","setSortBy","selectedLength","setSelectedLength","visibleGoods","filter","item","length","sort","good1","good2","localeCompare","reverse","type","classNames","onClick","active","htmlFor","id","onChange","event","target","ReactDOM","render","document","getElementById"],"mappings":"qQAOaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,oBAAIC,UAAU,cAAd,SACGD,EAAME,KAAI,SAAAC,GAAI,OACb,oBAAeF,UAAU,cAAzB,SACGE,GADMA,SCTJC,EAA0B,WAGrC,OACE,mCAHoB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAIlCF,KAAI,SAAAG,GAAY,OAC7B,wBAEEC,MAAOD,EAFT,SAIGA,GAJH,UACUA,UCHZE,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAkHaC,EA/GO,WACpB,MAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAA4CN,mBAAS,GAArD,mBAAOO,EAAP,KAAuBC,EAAvB,KACMC,EAAeX,EAAgBY,QACnC,SAAAC,GAAI,OAAIA,EAAKC,QAAUL,KAwBzB,OAfAE,EAAaI,MAAK,SAACC,EAAOC,GACxB,OAAQV,GACN,IAAK,WACH,OAAOS,EAAME,cAAcD,GAC7B,IAAK,SACH,OAAOD,EAAMF,OAASG,EAAMH,OAC9B,QACE,OAAO,MAITT,GACFM,EAAaQ,UAIb,sBAAKzB,UAAU,MAAf,UACE,uCACA,wBACE0B,KAAK,SACL1B,UAAW2B,IACT,SACAlB,EAAe,sBAAwB,gBAEzCmB,QAAS,kBAAMlB,GAAgB,IANjC,mBAWCD,GACC,sBAAKT,UAAU,iBAAf,UAEE,sBAAKA,UAAU,UAAf,UACE,wBACEA,UAAW2B,IAAW,SAAU,CAAEE,OAAQlB,IAC1Ce,KAAK,SACLE,QAAS,kBAAMhB,GAAeD,IAHhC,qBAQA,wBACEe,KAAK,SACL1B,UAAW2B,IACT,SACW,aAAXd,EAAwB,SAAW,IAErCe,QAAS,kBAAMd,EAAU,aAN3B,0BAWA,wBACEd,UAAW2B,IACT,SACW,WAAXd,EAAsB,SAAW,IAEnCa,KAAK,SACLE,QAAS,kBAAMd,EAAU,WAN3B,4BAWA,wBACEd,UAAU,eACV0B,KAAK,SACLE,QAxEE,WACZhB,GAAc,GACdE,EAAU,IACVE,EAAkB,IAkEV,mBAQA,wBACEU,KAAK,SACL1B,UAAU,SAFZ,SAIE,wBAAO8B,QAAQ,eAAf,UACG,WACD,wBACEC,GAAG,eACH1B,MAAOU,EACPiB,SAAU,SAACC,GACTjB,GAAmBiB,EAAMC,OAAO7B,QAJpC,SAOE,cAAC,EAAD,cAKR,cAAC,EAAD,CAAWN,MAAOkB,WCxH5BkB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e034920b.chunk.js","sourcesContent":["import React from 'react';\nimport './GoodsList.scss';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul className=\"Goods__list\">\n      {goods.map(good => (\n        <li key={good} className=\"Goods__item\">\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\n\nexport const SelectOptions: React.FC = () => {\n  const selectOptions = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n  return (\n    <>\n      {selectOptions.map(selectOption => (\n        <option\n          key={`${selectOption}`}\n          value={selectOption}\n        >\n          {selectOption}\n        </option>\n      ))}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './App.css';\nimport { GoodsList } from './components/GoodsList';\nimport { SelectOptions } from './components/SelectOptions';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [startPressed, setStartPressed] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortBy, setSortBy] = useState('');\n  const [selectedLength, setSelectedLength] = useState(0);\n  const visibleGoods = goodsFromServer.filter(\n    item => item.length >= selectedLength,\n  );\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortBy('');\n    setSelectedLength(0);\n  };\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortBy) {\n      case 'alphabet':\n        return good1.localeCompare(good2);\n      case 'length':\n        return good1.length - good2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Goods</h1>\n      <button\n        type=\"button\"\n        className={classNames(\n          'button',\n          startPressed ? 'button-start-hidden' : 'button-start',\n        )}\n        onClick={() => setStartPressed(true)}\n      >\n        START\n      </button>\n\n      {startPressed && (\n        <div className=\"App__container\">\n\n          <div className=\"buttons\">\n            <button\n              className={classNames('button', { active: isReversed })}\n              type=\"button\"\n              onClick={() => setIsReversed(!isReversed)}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              className={classNames(\n                'button',\n                sortBy === 'alphabet' ? 'active' : '',\n              )}\n              onClick={() => setSortBy('alphabet')}\n            >\n              Sort by name\n            </button>\n\n            <button\n              className={classNames(\n                'button',\n                sortBy === 'length' ? 'active' : '',\n              )}\n              type=\"button\"\n              onClick={() => setSortBy('length')}\n            >\n              Sort by length\n            </button>\n\n            <button\n              className=\"button reset\"\n              type=\"button\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button\"\n            >\n              <label htmlFor=\"selectLength\">\n                {'Select: '}\n                <select\n                  id=\"selectLength\"\n                  value={selectedLength}\n                  onChange={(event) => {\n                    setSelectedLength(+event.target.value);\n                  }}\n                >\n                  <SelectOptions />\n                </select>\n              </label>\n            </button>\n          </div>\n          <GoodsList goods={visibleGoods} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}